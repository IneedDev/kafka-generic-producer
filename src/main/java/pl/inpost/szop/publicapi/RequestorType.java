//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.07.21 at 03:28:22 PM CEST 
//


package pl.inpost.szop.publicapi;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for requestorType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="requestorType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="CentralSystem"/&gt;
 *     &lt;enumeration value="BoxMachine"/&gt;
 *     &lt;enumeration value="ConsoleOperator"/&gt;
 *     &lt;enumeration value="LegacySystem"/&gt;
 *     &lt;enumeration value="IntegrationWS"/&gt;
 *     &lt;enumeration value="Courier"/&gt;
 *     &lt;enumeration value="LogisticSystem"/&gt;
 *     &lt;enumeration value="OneClick"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "requestorType")
@XmlEnum
public enum RequestorType {

    @XmlEnumValue("CentralSystem")
    CENTRAL_SYSTEM("CentralSystem"),
    @XmlEnumValue("BoxMachine")
    BOX_MACHINE("BoxMachine"),
    @XmlEnumValue("ConsoleOperator")
    CONSOLE_OPERATOR("ConsoleOperator"),
    @XmlEnumValue("LegacySystem")
    LEGACY_SYSTEM("LegacySystem"),
    @XmlEnumValue("IntegrationWS")
    INTEGRATION_WS("IntegrationWS"),
    @XmlEnumValue("Courier")
    COURIER("Courier"),
    @XmlEnumValue("LogisticSystem")
    LOGISTIC_SYSTEM("LogisticSystem"),
    @XmlEnumValue("OneClick")
    ONE_CLICK("OneClick");
    private final String value;

    RequestorType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static RequestorType fromValue(String v) {
        for (RequestorType c: RequestorType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
