//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.07.21 at 03:28:22 PM CEST 
//


package pl.inpost.szop.publicapi;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for labelType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="labelType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="normal"/&gt;
 *     &lt;enumeration value="Xml"/&gt;
 *     &lt;enumeration value="DirectLabel"/&gt;
 *     &lt;enumeration value="A6P"/&gt;
 *     &lt;enumeration value="test"/&gt;
 *     &lt;enumeration value="dpi203"/&gt;
 *     &lt;enumeration value="dpi300"/&gt;
 *     &lt;enumeration value="dpi600"/&gt;
 *     &lt;enumeration value="ReverseReturn"/&gt;
 *     &lt;enumeration value="xmlDataSource"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "labelType")
@XmlEnum
public enum LabelType {

    @XmlEnumValue("normal")
    NORMAL("normal"),
    @XmlEnumValue("Xml")
    XML("Xml"),
    @XmlEnumValue("DirectLabel")
    DIRECT_LABEL("DirectLabel"),
    @XmlEnumValue("A6P")
    A_6_P("A6P"),
    @XmlEnumValue("test")
    TEST("test"),
    @XmlEnumValue("dpi203")
    DPI_203("dpi203"),
    @XmlEnumValue("dpi300")
    DPI_300("dpi300"),
    @XmlEnumValue("dpi600")
    DPI_600("dpi600"),
    @XmlEnumValue("ReverseReturn")
    REVERSE_RETURN("ReverseReturn"),
    @XmlEnumValue("xmlDataSource")
    XML_DATA_SOURCE("xmlDataSource");
    private final String value;

    LabelType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LabelType fromValue(String v) {
        for (LabelType c: LabelType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
